"""
Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.

(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

You are given a target value to search. If found in the array return its index, otherwise return -1.

You may assume no duplicate exists in the array.

"""

class Solution(object):
    def search(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
        if len(nums)==0:
            return -1
        
        start=0
        end=len(nums)-1
        
        while start<=end:
            middle=(start+end)/2
            if nums[middle]==target:
                return middle
            if nums[start]<nums[middle]:
                if nums[start]<target<nums[middle]:
                    end=middle-1
                else:
                    start=middle+1
            else:
                if nums[middle]<target<nums[end]:
                    start=middle+1
                else:
                    end=middle-1
        return -1
